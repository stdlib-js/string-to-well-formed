{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isString from '@stdlib/assert-is-string';\nimport format from '@stdlib/error-tools-fmtprodmsg';\nimport isWellFormed from '@stdlib/assert-is-well-formed-string';\n\n\n// VARIABLES //\n\nvar RE_UTF16_LOW_SURROGATE = /[\\uDC00-\\uDFFF]/;\nvar RE_UTF16_HIGH_SURROGATE = /[\\uD800-\\uDBFF]/;\n\n\n// MAIN //\n\n/**\n* Replaces all lone surrogates in order to create a new string which is well formed.\n*\n* @param {string} str - string to convert\n* @throws {TypeError} must provide a string\n* @returns {string} new string which does not contain any lone surrogates\n*\n* @example\n* var str = str2wellformed( 'ab\\uD800' );\n* // returns 'abï¿½'\n*/\nfunction str2wellformed( str ) {\n\tvar modifiedString;\n\tvar i;\n\tmodifiedString = '';\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'null3B', str ) );\n\t}\n\tif ( isWellFormed( str ) ) {\n\t\tfor ( i = 0; i < str.length; i++ ) {\n\t\t\tmodifiedString += str[i];\n\t\t}\n\t\treturn modifiedString;\n\t}\n\tfor ( i = 0; i < str.length; i++ ) {\n\t\tif ( RE_UTF16_LOW_SURROGATE.test( str[ i ] ) || RE_UTF16_HIGH_SURROGATE.test( str[ i ] ) ) {\n\t\t\tmodifiedString += '\\uFFFD';\n\t\t}\n\t\telse {\n\t\t\tmodifiedString += str[ i ];\n\t\t}\n\t}\n\treturn modifiedString;\n}\n\n\n// EXPORTS //\n\nexport default str2wellformed;\n"],"names":["RE_UTF16_LOW_SURROGATE","RE_UTF16_HIGH_SURROGATE","str2wellformed","str","modifiedString","i","isString","TypeError","format","isWellFormed","length","test"],"mappings":";;4RA6BA,IAAIA,EAAyB,kBACzBC,EAA0B,kBAgB9B,SAASC,EAAgBC,GACxB,IAAIC,EACAC,EAGJ,GAFAD,EAAiB,IAEXE,EAAUH,GACf,MAAM,IAAII,UAAWC,EAAQ,SAAUL,IAExC,GAAKM,EAAcN,GAAQ,CAC1B,IAAME,EAAI,EAAGA,EAAIF,EAAIO,OAAQL,IAC5BD,GAAkBD,EAAIE,GAEvB,OAAOD,CACP,CACD,IAAMC,EAAI,EAAGA,EAAIF,EAAIO,OAAQL,IACvBL,EAAuBW,KAAMR,EAAKE,KAASJ,EAAwBU,KAAMR,EAAKE,IAClFD,GAAkB,IAGlBA,GAAkBD,EAAKE,GAGzB,OAAOD,CACR"}